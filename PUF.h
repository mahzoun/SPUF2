//
// Created by Mairon on 2/5/21.
//

#ifndef SPUF2_PUF_H
#define SPUF2_PUF_H

#include <functional>
#include <iostream>
#include <cstdint>
#include <random>
#include <bitset>
#include <chrono>

#define CH_SIZE 100
#define INPUT_SIZE 25
using namespace std;

class PUF {
public:
    uint32_t STAGE1[5][32] = {
            {16, 19, 5, 10, 26, 22, 20, 27, 21, 7, 29, 6, 30, 11, 8, 23, 15, 0, 13, 14, 1, 4, 18, 12, 28, 24, 2, 31, 25, 9, 3, 17},
            {2, 24, 3, 27, 6, 19, 18, 4, 23, 13, 20, 26, 22, 12, 0, 11, 10, 25, 9, 21, 1, 30, 16, 14, 7, 17, 28, 5, 29, 8, 31, 15},
            {25, 5, 1, 20, 18, 28, 8, 19, 13, 14, 26, 27, 0, 15, 7, 10, 4, 2, 11, 30, 24, 12, 23, 29, 22, 3, 6, 31, 9, 17, 21, 16},
            {24, 7, 29, 5, 3, 15, 18, 4, 20, 30, 10, 2, 6, 12, 23, 16, 27, 13, 25, 28, 31, 22, 26, 19, 0, 1, 11, 21, 14, 17, 9, 8},
            {2, 3, 14, 19, 20, 28, 25, 6, 4, 5, 24, 22, 18, 23, 26, 16, 29, 21, 17, 7, 11, 31, 8, 27, 30, 9, 10, 12, 0, 13, 15, 1}
    };

    uint32_t STAGE2[5][32] = {
            {9, 31, 11, 30, 7, 15, 4, 0, 22, 1, 20, 3, 16, 17, 6, 2, 25, 27, 19, 13, 14, 8, 29, 5, 23, 24, 12, 10, 18, 28, 26, 21},
            {6, 23, 3, 9, 16, 27, 31, 4, 12, 2, 18, 21, 14, 30, 28, 0, 19, 15, 25, 20, 29, 11, 24, 10, 22, 17, 26, 8, 13, 5, 1, 7},
            {2, 7, 5, 17, 11, 9, 19, 27, 24, 13, 29, 23, 10, 20, 6, 8, 18, 22, 1, 0, 28, 3, 30, 26, 14, 31, 12, 21, 4, 25, 16, 15},
            {20, 17, 16, 6, 27, 8, 28, 9, 2, 19, 21, 25, 4, 13, 26, 31, 7, 0, 11, 18, 14, 29, 24, 15, 23, 12, 22, 1, 10, 30, 3, 5},
            {4, 24, 31, 17, 13, 29, 3, 1, 26, 9, 11, 8, 28, 20, 27, 6, 23, 30, 21, 2, 12, 7, 19, 10, 16, 5, 25, 14, 22, 18, 15, 16}
    };

    uint32_t STAGE1_inv[5][32] = {
            {17, 20, 26, 30, 21, 2, 11, 9, 14, 29, 3, 13, 23, 18, 19, 16, 0, 31, 22, 1, 6, 8, 5, 15, 25, 28, 4, 7, 24, 10, 12, 27},
            {14, 20, 0, 2, 7, 27, 4, 24, 29, 18, 16, 15, 13, 9, 23, 31, 22, 25, 6, 5, 10, 19, 12, 8, 1, 17, 11, 3, 26, 28, 21, 30},
            {12, 2, 17, 25, 16, 1, 26, 14, 6, 28, 15, 18, 21, 8, 9, 13, 31, 29, 4, 7, 3, 30, 24, 22, 20, 0, 10, 11, 5, 23, 19, 27},
            {24, 25, 11, 4, 7, 3, 12, 1, 31, 30, 10, 26, 13, 17, 28, 5, 15, 29, 6, 23, 8, 27, 21, 14, 0, 18, 22, 16, 19, 2, 9, 20},
            {28, 31, 0, 1, 8, 9, 7, 19, 22, 25, 26, 20, 27, 29, 2, 30, 15, 18, 12, 3, 4, 17, 11, 13, 10, 6, 14, 23, 5, 16, 24, 21}
    };
    uint32_t STAGE2_inv[5][32] = {
            {17, 20, 26, 30, 21, 2, 11, 9, 14, 29, 3, 13, 23, 18, 19, 16, 0, 31, 22, 1, 6, 8, 5, 15, 25, 28, 4, 7, 24, 10, 12, 27},
            {14, 20, 0, 2, 7, 27, 4, 24, 29, 18, 16, 15, 13, 9, 23, 31, 22, 25, 6, 5, 10, 19, 12, 8, 1, 17, 11, 3, 26, 28, 21, 30},
            {12, 2, 17, 25, 16, 1, 26, 14, 6, 28, 15, 18, 21, 8, 9, 13, 31, 29, 4, 7, 3, 30, 24, 22, 20, 0, 10, 11, 5, 23, 19, 27},
            {24, 25, 11, 4, 7, 3, 12, 1, 31, 30, 10, 26, 13, 17, 28, 5, 15, 29, 6, 23, 8, 27, 21, 14, 0, 18, 22, 16, 19, 2, 9, 20},
            {28, 31, 0, 1, 8, 9, 7, 19, 22, 25, 26, 20, 27, 29, 2, 30, 15, 18, 12, 3, 4, 17, 11, 13, 10, 6, 14, 23, 5, 16, 24, 21}
    };


    bool STAGE3[5][32] = {
            {0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1},
            {1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1},
            {0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
            {0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1}
    };
    // uncomment the following constructor for generating new randomness with each run
//    uint32_t STAGE1[5][32], STAGE2[5][32];
//    bool STAGE3[5][32];

//    PUF() {
//        mt19937::result_type seed = chrono::high_resolution_clock::now().time_since_epoch().count();
//        auto f_rand = bind(std::uniform_int_distribution<int>(0, 31), mt19937(seed));
//        auto f_rand_bin = bind(std::uniform_int_distribution<int>(0, 1), mt19937(seed));

//        for (int i = 0; i < 5; i++)
//            for (int j = 0; j < 32; j++)
//                STAGE1[i][j] = f_rand();
//        for (int i = 0; i < 5; i++)
//            for (int j = 0; j < 32; j++)
//                STAGE2[i][j] = f_rand();
//        for (int i = 0; i < 5; i++)
//            for (int j = 0; j < 32; j++)
//                STAGE3[i][j] = f_rand_bin();
//    }

    bitset<INPUT_SIZE> phase1(bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE> phase2(bitset<INPUT_SIZE>, bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE / 5> phase3(bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE> stage1(bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE> stage2(bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE> permute(bitset<INPUT_SIZE>);

    bitset<INPUT_SIZE> XOR(bitset<INPUT_SIZE>, bitset<INPUT_SIZE>);

    bitset<CH_SIZE> RANDOM(bitset<CH_SIZE>);

    bool AUTH(bitset<CH_SIZE>);
};


#endif //SPUF2_PUF_H
